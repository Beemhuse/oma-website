@import url("https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
    /* --font-inter: Inter, sans-serif; */
    /* --font-poppins: Poppins, sans-serif; */
  }
}

body {
  color: var(--foreground);
  background: var(--background);
}
@layer utilities {
  .maskGradient{
    mask-image: linear-gradient(to right,
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 1) 20%,
    rgba(0, 0, 0, 0.3))
    
    
  }
  .coreBox {
    grid-template-columns: repeat(12, 1fr);
    /* position: relative; */
  }
  .core1 {
    grid-column: 1 / span 4;
    grid-row: 1;
  }
  .core2 {
    grid-column: 5 / span 4;
    grid-row: 1;
  }
  .core3 {
    grid-column: 9 / span 4;
    grid-row: 1;
  }
  .core4 {
    grid-column: 2 / span 4;
    grid-row: 2;
  }
  .core5 {
    grid-column: 6 / span 4;
    grid-row: 2;
  }
  .core6 {
    grid-column: 1 / span 4;
    grid-row: 3;
  }
  .core7 {
    grid-column: 5 / span 4;
    grid-row: 3;
  }
  .core8 {
    grid-column: 9 / span 4;
    grid-row: 3;
  }
  .core9 {
    grid-column: 10 / span 4;
    grid-row: 2;
  }

  .core1,
  .core2,
  .core3,
  .core4,
  .core5, .core6, .core7, .core8 {
    position: relative;
    padding: 20px; 
    transition: box-shadow 0.3s ease, border 0.3s ease;
    z-index: 0;
  }

  .core1:hover,
  .core2:hover,
  .core3:hover,
  .core4:hover,
  .core5:hover, .core6:hover, .core7:hover, .core8:hover, .core9:hover{
    box-shadow: 0 0 0 2px rgba(0, 117, 10, 0.1); 
    z-index: 10; 
    transition: box-shadow 0.3s ease;
  }

  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }

  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .anim {
    animation: anim 3s infinite alternate linear;
  }
  #svg {
    width: 150px;
    height: 150px;
    stroke: #3498db;
    fill: none;
    stroke-width: 2;
  }
  .bg-container {
    background-color: #f6f4f4; /* Same as your main background */
    mix-blend-mode: multiply;
  }

  /* Loader css */
  .loader {
    width: 88px;
    height: 12px;
    --_g: no-repeat radial-gradient(farthest-side,#000 94%,#0000);
    background:
      var(--_g) 25% 0,
      var(--_g) 75% 0;
    background-size: 12px 12px;
    position: relative;
    animation: l24-0 1s linear infinite;
  }
  .loader:before {
    content: "";
    position: absolute;
    height: 12px;
    aspect-ratio: 1;
    border-radius: 50%;
    background: #fff;
    inset: 0;
    margin: auto;
    animation: l24-1 1s cubic-bezier(0.5,300,0.5,-300) infinite;
  }
  @keyframes l24-0 {
    0%,24%  {background-position: 25% 0,75% 0}
    40%     {background-position: 25% 0,85% 0}
    50%,72% {background-position: 25% 0,75% 0}
    90%     {background-position: 15% 0,75% 0}
    100%    {background-position: 25% 0,75% 0}
  }
  @keyframes l24-1 {
    100% {transform:translate(0.1px)}
  }


  @keyframes anim {
    from {
      top: 0%;
      transform: translateY(-50%);
    }
    to {
      top: 100%;
      transform: translateY(-50%);
    }
  }
  .gridBox {
    min-height: 100vh;
    grid-template-columns: repeat(13, 1fr);
  }
  .grid1 {
    grid-column: 1 / span 13;
  }
  .grid2 {
    grid-column: 1 / span 7;
    grid-row: 2 / span 2;
  }
  .grid3 {
    grid-column: 11/14;
    grid-row: 2;
  }
  .grid4 {
    grid-column: 8 / span 3;
    grid-row: 3 / span 2;
  }
  .grid5 {
    grid-column: 11 / span 3;
    grid-row: 3;
  }
  .grid6 {
    grid-column: 11 / span 3;
    grid-row: 4;
  }
  .grid7 {
    grid-column: 5 / span 3;
    grid-row: 4;
  }
  .grid8 {
    grid-column: 8 / span 6;
    grid-row: 5;
  }
  .grid9 {
    grid-column: 5 / span 3;
    grid-row: 5;
  }
  .grid10 {
    grid-column: 2 / span 3;
    grid-row: 5;
  }
  .grid11 {
    grid-column: 1 / span 13;
    grid-row: 6;
  }


  @media only screen and (max-width: 500px){
    .gridBox {
      min-height: 100vh;
      grid-template-columns: repeat(3, 1fr);
    }
    .grid1 {
      grid-column: 1 / span 3;
      display: none;
    }
    .grid2 {
      grid-column: 1 / span 3;
      grid-row: 1;
      height: 130px;
      background-color: rgba(0,0,0,0.1);
    }
    .grid3 {
      grid-column: 2/span 2;
      grid-row: 2;
    }
    .grid4 {
      grid-column: 2;
      grid-row: 5;
    }
    .grid5 {
      grid-column: 1;
      grid-row: 3;
    }
    .grid6 {
      grid-column: 2;
      grid-row: 3/span 2;
    }
    .grid7 {
      grid-column: 3;
      grid-row: 3;
    }
    .grid8 {
      grid-column: 3;
      grid-row: 4/span 2;
    }
    .grid9 {
      grid-column: 1;
      grid-row: 4;
    }
    .grid10 {
      grid-column: 1;
      grid-row: 5;
    }
    .grid11 {
      grid-column: 1/span 3;
      grid-row: 6;
    }
  }


  .loader2 {
    width: 60px;
    aspect-ratio: 1;
    display: grid;
    grid: 50%/50%;
    color: #25b09b;
    --_g: no-repeat linear-gradient(currentColor 0 0);
    background: var(--_g),var(--_g),var(--_g);
    background-size: 50.1% 50.1%;
    animation: 
      l6-0   1.5s infinite steps(1) alternate,
      l6-0-0 3s   infinite steps(1);
  }
  .loader2::before {
    content: "";
    background: currentColor;
    transform: perspective(150px) rotateY(0deg) rotateX(0deg);
    transform-origin: bottom right; 
    animation: l6-1 1.5s infinite linear alternate;
  }
  @keyframes l6-0 {
    0%  {background-position: 0    100%,100% 100%,100% 0}
    33% {background-position: 100% 100%,100% 100%,100% 0}
    66% {background-position: 100% 0   ,100% 0   ,100% 0}
  }
  @keyframes l6-0-0 {
    0%  {transform: scaleX(1)  rotate(0deg)}
    50% {transform: scaleX(-1) rotate(-90deg)}
  }
  @keyframes l6-1 {
    16.5%{transform:perspective(150px) rotateX(-90deg)  rotateY(0deg)    rotateX(0deg);filter:grayscale(0.8)}
    33%  {transform:perspective(150px) rotateX(-180deg) rotateY(0deg)    rotateX(0deg)}
    66%  {transform:perspective(150px) rotateX(-180deg) rotateY(-180deg) rotateX(0deg)}
    100% {transform:perspective(150px) rotateX(-180deg) rotateY(-180deg) rotateX(-180deg);filter:grayscale(0.8)}
  }
}
